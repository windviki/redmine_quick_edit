<div id="quick_edit">
  <div id="quick_edit_input_dialogs"></div>
  <div id="quick_edit_flash" class="flash error" 
    style="display: none; z-index: 1000; position: fixed; top: 10px; left: 10px; opacity: 0.9; min-width: 300px; background-color: #ffe3e3;">
    <div style="padding: 10px 5px;"> 
      <span id="quick_edit_flash_message"></span>
    </div> 
  </div>
</div>
<script>
//<![CDATA[
function quick_edit_log(message){
  if(typeof console !== "undefined" && typeof console.log !=="undefined")
    console.log("quick_edit: "+message);
}

function quick_edit_setup_ajax_error_handler() {
  $(document).ajaxError( function (event, jqXHR, ajaxSettings, thrownError) {
    if (! (/quick_edit/.test(ajaxSettings.url))) return;

    var message =  jqXHR.status + " " + (jqXHR.getResponseHeader("X-Quick-Edit-Error") || thrownError || jqXHR.statusText);
    $("#quick_edit_flash_message").text(message);

    var flash = $("#quick_edit_flash");
    flash.click( function(e) { e.stopPropagation(); } );
    flash.fadeIn(500, function () {
      setTimeout( function() { flash.fadeOut(); }, 3000)
    });
  });
}

var offsetY = /[?&]offsetY=(\d+).*/g.exec(location.href);
if (offsetY) {
  window.scrollTo(0, offsetY[1]);
}

quick_edit_setup_ajax_error_handler();
quick_edit_drag_and_drop_init();

function quick_edit_drag_and_drop_init() {
  if ($("body").hasClass("controller-issues action-index")) {
    $("tr.issue").draggable({
      axis: "y",
      cursor: "move",
      containment: "parent",
      scope: "issue",
      snap: true,
      opacity: 0.5,
      helper: function () { return $('<div></div>'); },
      start: function (event, ui) {
        drag_element = $(this);
        if (!drag_element.hasClass("context-menu-selection")) {
          drag_element.addClass("context-menu-selection");
        }
    
        ui.helper.css( {
          "width": drag_element.css("width"),
          "height": drag_element.css("height"),
          "background-color": drag_element.css("background-color")});
      }
    });
  
    $("tr.issue").droppable({
      scope: "issue",
      drop: function (event, ui) {
        var update_ids = quick_edit_get_selections();
        var new_parent_id = quick_edit_get_issue_id_from_element(this);
        if (!new_parent_id) return;

        $.ajax({
          url: '<%= quick_edit_issues_edit_path() %>?' + update_ids.join("&") + '&target_specifier=issue[parent_issue_id]&default_value='+new_parent_id,
          dataType: "script",
          success : function (html) { $("#quick_edit_dialogs").html(html); }
        });
      }
    });
  }
}

function quick_edit_drag_and_drop_enable(){
  $("tr.issue.ui-draggable").each( function () {
    var issue = $(this);
    issue.draggable("enable");
  });
  $("tr.issue.ui-droppable").each( function () {
    var issue = $(this);
    issue.droppable("enable");
  });

  quick_edit_log("issue d&d enabled.");
}

function quick_edit_drag_and_drop_disable(){
  $("tr.issue.ui-draggable").each( function () {
    var issue = $(this);
    issue.draggable("disable");
  });
  $("tr.issue.ui-droppable").each( function () {
    var issue = $(this);
    issue.droppable("disable");
  });
  
  quick_edit_log("issue d&d disabled.");
}

function quick_edit_get_selections() {
    var ids = [];
    $(".context-menu-selection").each(function (index,element) {
      var id = quick_edit_get_issue_id_from_element(element);
      ids.push("ids[]="+id);
    });
    return ids;
}

function quick_edit_get_issue_id_from_element(element) {
  var id = $(element).attr("id");
  var m = /issue-(.*)/.exec(id);
  return m[1];
}

function quick_edit_input_dialog_switch_page() {
  var dialog = $("#quick_edit_input_dialog");

  var switchers = dialog.find(".page-switcher");
  switchers.toggle();

  var pages = dialog.find(".page");
  pages.toggle();

  if (dialog.find("#replace_switcher:hidden").length == 1) {
    dialog.find("#find").focus();
    dialog.dialog("option", "buttons",
      [ { text: "Preview", click: quick_edit_input_dialog_preview_replace},
        { text: "Submit", click: quick_edit_input_dialog_replace_submit},
        { text: "Cancel", click: quick_edit_input_dialog_cancel}]);

  } else {
    dialog.find("#new_value").focus();
    dialog.dialog("option", "buttons",
      [ { text: "Submit", click: quick_edit_input_dialog_edit_submit},
        { text: "Cancel", click: quick_edit_input_dialog_cancel}]);
  }
}

function quick_edit_input_dialog_preview_replace() {
  var replace_page = $("#quick_edit_input_dialog #replace-page");

  var target_specifier = replace_page.find("#target_specifier").val();
  var find = replace_page.find("#find").val();
  var replace = replace_page.find("#replace").val();
  var match_case = replace_page.find("#match_case:checked").val();
  var ids = [];
  replace_page.find("#ids").each( function () { ids.push($(this).val()); });
  var url="<%= quick_edit_issues_replace_preview_path() %>";

  if(find == "") {
    alert('<%=l(:text_is_required)%>');
    return;
  }

  $.ajax({
     url: url,
     data: {ids: ids, target_specifier: target_specifier, find: find, replace: replace, match_case: match_case},
     dataType: 'script'});
}

function quick_edit_input_dialog_replace_submit() {
  var replace_page = $("#quick_edit_input_dialog #replace-page");

  var find = replace_page.find("#find").val();
  if(find == "") {
    alert('<%=l(:text_is_required)%>');
    return;
  }

  if (!confirm('<%= l(:text_are_you_sure) %>')) {
    return;
  }

  replace_page.find("form").submit();
}

function quick_edit_input_dialog_open(){
  quick_edit_drag_and_drop_disable();
}

function quick_edit_input_dialog_close(){
  quick_edit_drag_and_drop_enable();
  $("#quick_edit_input_dialog").remove();
}

function quick_edit_input_dialog_cancel(){
  $("#quick_edit_input_dialog").dialog("close");
}

function quick_edit_clear(){
}

function quick_edit_input_dialog_edit_submit(){
  var edit_page = $("#quick_edit_input_dialog #edit-page");

  var target_specifier = edit_page.find("#target_specifier").val();
  var new_value_element = edit_page.find("#new_value");
  var clr_value_element = edit_page.find("#clear");

  if (edit_page.find("#clear:checked").length > 0){
    new_value_element.attr("name", "_quick_edit_tmp");
    clr_value_element.attr("name", target_specifier);

  } else {
    new_value_element.attr("name", target_specifier);
    clr_value_element.attr("name", "_quick_edit_tmp");

    var new_value = edit_page.find("#new_value").val();
    if(new_value === null) return;

    var pattern = new RegExp(edit_page.find("#validation_pattern").val());

    if(new_value == "") {
      alert('<%=l(:text_is_required)%>');
      return;

    } else {

      if(pattern && !pattern.test(new_value)){
         alert('<%=l(:text_invalid_format)%>');
         return;
      }
    }
  }

  var issue_ids = [];
  edit_page.find("#ids").each(function (index,element) {
    issue_ids.push($(this).val());
  });
  if(issue_ids.length>1){
     if(!confirm('<%=l(:text_multiple_update_confirm)%>')) return;
  }

  var offsetY = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
  var back_url = edit_page.find("#back_url").val();
  if (back_url.indexOf("?") == -1) {
    back_url = back_url + "?offsetY=" + offsetY;
  } else {
    back_url = back_url + "&offsetY=" + offsetY;
  }
  edit_page.find("#back_url").val(back_url);

  edit_page.find("form").submit();
}

function quick_edit_show_new_relation_dialog(first_issue_id, second_issue_id, back_url){
  $("#quick_edit_new_relation_dialog > form > #issue_id").val(first_issue_id);
  $("#quick_edit_new_relation_dialog > form > #relation_issue_to_id").val(second_issue_id);
  $("#quick_edit_new_relation_dialog > form > #back_url").val(back_url);
  $("#quick_edit_new_relation_dialog").dialog({
     modal: true,
     closeOnEscape: false,
     width: 450,
     height: 150,
     open: quick_edit_new_relation_dialog_open,
     close: quick_edit_new_relation_dialog_close
  });

  quick_edit_log("new_relation dialog open.");
}

function quick_edit_new_relation_dialog_cancel(){
   $('#quick_edit_new_relation_dialog').dialog("close");
}

function quick_edit_new_relation_dialog_open(){
  quick_edit_drag_and_drop_disable();
}

function quick_edit_new_relation_dialog_close(){
  quick_edit_drag_and_drop_enable();
}

//]]>
</script>

